/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

/**
 * FirstAdminUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class FirstAdminUser {
  @JsonProperty("login")
  private String login = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("needsToChangeUserName")
  private Boolean needsToChangeUserName = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("title")
  private String title = null;

  /**
   * Gender
   */
  public enum GenderEnum {
    M("m"),
    
    F("f"),
    
    N("n");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String text) {
      for (GenderEnum b : GenderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("gender")
  private GenderEnum gender = null;

  @JsonProperty("receiverLanguage")
  private String receiverLanguage = null;

  @JsonProperty("notifyUser")
  private Boolean notifyUser = null;

  @JsonProperty("authMethods")
  private List<UserAuthMethod> authMethods = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("phone")
  private String phone = null;

    @JsonProperty("needsToChangePassword")
    private Boolean needsToChangePassword = null;

    @JsonProperty("language")
    private String language = null;

  public FirstAdminUser login(String login) {
    this.login = login;
    return this;
  }

   /**
   * User login name
   * @return login
  **/
  @ApiModelProperty(required = true, value = "User login name")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public FirstAdminUser firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "User first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public FirstAdminUser lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "User last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public FirstAdminUser needsToChangeUserName(Boolean needsToChangeUserName) {
    this.needsToChangeUserName = needsToChangeUserName;
    return this;
  }

   /**
    * If &#x60;true&#x60;, the user must change the &#x60;userName&#x60; at the first login. (default: &#x60;false&#x60;)
   * @return needsToChangeUserName
  **/
   @ApiModelProperty(example = "false", value = "If `true`, the user must change the `userName` at the first login. (default: `false`)")
   public Boolean isNeedsToChangeUserName() {
    return needsToChangeUserName;
  }

  public void setNeedsToChangeUserName(Boolean needsToChangeUserName) {
    this.needsToChangeUserName = needsToChangeUserName;
  }

  public FirstAdminUser password(String password) {
    this.password = password;
    return this;
  }

   /**
   * An initial password may be preset
   * @return password
  **/
  @ApiModelProperty(value = "An initial password may be preset")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public FirstAdminUser title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Job title
   * @return title
  **/
  @ApiModelProperty(value = "Job title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public FirstAdminUser gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Gender
   * @return gender
  **/
  @ApiModelProperty(example = "n", value = "Gender")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public FirstAdminUser receiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
    return this;
  }

   /**
   * IETF language tag
   * @return receiverLanguage
  **/
  @ApiModelProperty(example = "de-DE", value = "IETF language tag")
  public String getReceiverLanguage() {
    return receiverLanguage;
  }

  public void setReceiverLanguage(String receiverLanguage) {
    this.receiverLanguage = receiverLanguage;
  }

  public FirstAdminUser notifyUser(Boolean notifyUser) {
    this.notifyUser = notifyUser;
    return this;
  }

   /**
    * Notify user about his new account (default: &#x60;true&#x60;)
   * @return notifyUser
  **/
   @ApiModelProperty(example = "true", value = "Notify user about his new account (default: `true`)")
   public Boolean isNotifyUser() {
    return notifyUser;
  }

  public void setNotifyUser(Boolean notifyUser) {
    this.notifyUser = notifyUser;
  }

  public FirstAdminUser authMethods(List<UserAuthMethod> authMethods) {
    this.authMethods = authMethods;
    return this;
  }

  public FirstAdminUser addAuthMethodsItem(UserAuthMethod authMethodsItem) {
    if (this.authMethods == null) {
        this.authMethods = new ArrayList<>();
    }
    this.authMethods.add(authMethodsItem);
    return this;
  }

   /**
   * Authentication methods: * &#x60;sql&#x60; * &#x60;active_directory&#x60; * &#x60;radius&#x60; * &#x60;openid&#x60;
   * @return authMethods
  **/
  @ApiModelProperty(value = "Authentication methods: * `sql` * `active_directory` * `radius` * `openid`")
  public List<UserAuthMethod> getAuthMethods() {
    return authMethods;
  }

  public void setAuthMethods(List<UserAuthMethod> authMethods) {
    this.authMethods = authMethods;
  }

  public FirstAdminUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email (not used)
   * @return email
  **/
  @ApiModelProperty(example = "john.doe@email.com", value = "Email (not used)")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public FirstAdminUser phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
    * Phone Number
   * @return phone
  **/
   @ApiModelProperty(value = "Phone Number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

    public FirstAdminUser needsToChangePassword(Boolean needsToChangePassword) {
        this.needsToChangePassword = needsToChangePassword;
        return this;
    }

    /**
     * Determines whether user has to change his / her initial password. (default: &#x60;true&#x60;)
     *
     * @return needsToChangePassword
     **/
    @ApiModelProperty(example = "false", value = "Determines whether user has to change his / her initial password. (default: `true`)")
    public Boolean isNeedsToChangePassword() {
        return needsToChangePassword;
    }

    public void setNeedsToChangePassword(Boolean needsToChangePassword) {
        this.needsToChangePassword = needsToChangePassword;
    }

    public FirstAdminUser language(String language) {
        this.language = language;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: Language ID or ISO 639-1 code
     *
     * @return language
     **/
    @ApiModelProperty(example = "de", value = "`DEPRECATED`: Language ID or ISO 639-1 code")
    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }


    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirstAdminUser firstAdminUser = (FirstAdminUser) o;
    return Objects.equals(this.login, firstAdminUser.login) &&
        Objects.equals(this.firstName, firstAdminUser.firstName) &&
        Objects.equals(this.lastName, firstAdminUser.lastName) &&
        Objects.equals(this.needsToChangeUserName, firstAdminUser.needsToChangeUserName) &&
        Objects.equals(this.password, firstAdminUser.password) &&
        Objects.equals(this.title, firstAdminUser.title) &&
        Objects.equals(this.gender, firstAdminUser.gender) &&
        Objects.equals(this.receiverLanguage, firstAdminUser.receiverLanguage) &&
        Objects.equals(this.notifyUser, firstAdminUser.notifyUser) &&
        Objects.equals(this.authMethods, firstAdminUser.authMethods) &&
        Objects.equals(this.email, firstAdminUser.email) &&
        Objects.equals(this.phone, firstAdminUser.phone) &&
        Objects.equals(this.needsToChangePassword, firstAdminUser.needsToChangePassword) &&
        Objects.equals(this.language, firstAdminUser.language);
  }

  @Override
  public int hashCode() {
      return Objects.hash(login, firstName, lastName, needsToChangeUserName, password, title, gender, receiverLanguage, notifyUser, authMethods, email, phone, needsToChangePassword, language);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirstAdminUser {\n");
    
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    needsToChangeUserName: ").append(toIndentedString(needsToChangeUserName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    receiverLanguage: ").append(toIndentedString(receiverLanguage)).append("\n");
    sb.append("    notifyUser: ").append(toIndentedString(notifyUser)).append("\n");
    sb.append("    authMethods: ").append(toIndentedString(authMethods)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
      sb.append("    needsToChangePassword: ").append(toIndentedString(needsToChangePassword)).append("\n");
      sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

