/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

/**
 * UserAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class UserAccount {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("login")
  private String login = null;

  @JsonProperty("needsToChangePassword")
  private Boolean needsToChangePassword = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("isLocked")
  private Boolean isLocked = null;

  @JsonProperty("hasManageableRooms")
  private Boolean hasManageableRooms = null;

  @JsonProperty("userRoles")
  private RoleList userRoles = null;

  @JsonProperty("authMethods")
  private List<UserAuthMethod> authMethods = new ArrayList<>();

    @JsonProperty("customer")
    private CustomerData customer = null;

    @JsonProperty("lockStatus")
    private Integer lockStatus = null;

  @JsonProperty("needsToChangeUserName")
  private Boolean needsToChangeUserName = null;

  @JsonProperty("needsToAcceptEULA")
  private Boolean needsToAcceptEULA = null;

  @JsonProperty("title")
  private String title = null;

  /**
   * Gender
   */
  public enum GenderEnum {
    M("m"),
    
    F("f"),
    
    N("n");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String text) {
      for (GenderEnum b : GenderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("gender")
  private GenderEnum gender = null;

  @JsonProperty("expireAt")
  private DateTime expireAt = null;

  @JsonProperty("isEncryptionEnabled")
  private Boolean isEncryptionEnabled = null;

  @JsonProperty("lastLoginSuccessAt")
  private DateTime lastLoginSuccessAt = null;

  @JsonProperty("lastLoginFailAt")
  private DateTime lastLoginFailAt = null;

  @JsonProperty("userGroups")
  private List<UserGroup> userGroups = null;

  @JsonProperty("userAttributes")
  private UserAttributes userAttributes = null;

  @JsonProperty("email")
  private String email = null;

    @JsonProperty("phone")
    private String phone = null;

    @JsonProperty("homeRoomId")
    private Long homeRoomId = null;

  @JsonProperty("lastLoginSuccessIp")
  private String lastLoginSuccessIp = null;

  @JsonProperty("lastLoginFailIp")
  private String lastLoginFailIp = null;

  public UserAccount id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the user
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier for the user")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public UserAccount login(String login) {
    this.login = login;
    return this;
  }

   /**
   * User login name
   * @return login
  **/
  @ApiModelProperty(required = true, value = "User login name")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public UserAccount needsToChangePassword(Boolean needsToChangePassword) {
    this.needsToChangePassword = needsToChangePassword;
    return this;
  }

   /**
    * Determines whether user has to change his / her password
   * @return needsToChangePassword
  **/
   @ApiModelProperty(example = "false", required = true, value = "Determines whether user has to change his / her password")
   public Boolean isNeedsToChangePassword() {
    return needsToChangePassword;
  }

  public void setNeedsToChangePassword(Boolean needsToChangePassword) {
    this.needsToChangePassword = needsToChangePassword;
  }

  public UserAccount firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "User first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserAccount lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "User last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserAccount isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
    * User is locked: * &#x60;false&#x60; - unlocked * &#x60;true&#x60; - locked  Iser is locked and can not login anymore. (default: &#x60;false&#x60;)
   * @return isLocked
  **/
   @ApiModelProperty(example = "false", required = true, value = "User is locked: * `false` - unlocked * `true` - locked  Iser is locked and can not login anymore. (default: `false`)")
   public Boolean isIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public UserAccount hasManageableRooms(Boolean hasManageableRooms) {
    this.hasManageableRooms = hasManageableRooms;
    return this;
  }

   /**
   * User has manageable rooms
   * @return hasManageableRooms
  **/
   @ApiModelProperty(example = "false", required = true, value = "User has manageable rooms")
   public Boolean isHasManageableRooms() {
    return hasManageableRooms;
  }

  public void setHasManageableRooms(Boolean hasManageableRooms) {
    this.hasManageableRooms = hasManageableRooms;
  }

  public UserAccount userRoles(RoleList userRoles) {
    this.userRoles = userRoles;
    return this;
  }

   /**
   * List of user roles
   * @return userRoles
  **/
  @ApiModelProperty(required = true, value = "List of user roles")
  public RoleList getUserRoles() {
    return userRoles;
  }

  public void setUserRoles(RoleList userRoles) {
    this.userRoles = userRoles;
  }

  public UserAccount authMethods(List<UserAuthMethod> authMethods) {
    this.authMethods = authMethods;
    return this;
  }

  public UserAccount addAuthMethodsItem(UserAuthMethod authMethodsItem) {
    this.authMethods.add(authMethodsItem);
    return this;
  }

   /**
   * Authentication methods: * &#x60;sql&#x60; * &#x60;active_directory&#x60; * &#x60;radius&#x60; * &#x60;openid&#x60;
   * @return authMethods
  **/
  @ApiModelProperty(required = true, value = "Authentication methods: * `sql` * `active_directory` * `radius` * `openid`")
  public List<UserAuthMethod> getAuthMethods() {
    return authMethods;
  }

  public void setAuthMethods(List<UserAuthMethod> authMethods) {
    this.authMethods = authMethods;
  }

    public UserAccount customer(CustomerData customer) {
        this.customer = customer;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: Customer information Please use response from &#x60;GET /user/account/customer&#x60; instead.  [Deprecated since version 4.10.0]
     *
     * @return customer
     **/
    @ApiModelProperty(required = true, value = "`DEPRECATED`: Customer information Please use response from `GET /user/account/customer` instead.  [Deprecated since version 4.10.0]")
    public CustomerData getCustomer() {
        return customer;
    }

    public void setCustomer(CustomerData customer) {
        this.customer = customer;
    }

    public UserAccount lockStatus(Integer lockStatus) {
        this.lockStatus = lockStatus;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: User lock status: * &#x60;0&#x60; - locked * &#x60;1&#x60; - Web access allowed * &#x60;2&#x60; - Web and mobile access allowed  Please use &#x60;isLocked&#x60; instead.  [Deprecated since version 4.7.0]
     *
     * @return lockStatus
     **/
    @ApiModelProperty(required = true, value = "`DEPRECATED`: User lock status: * `0` - locked * `1` - Web access allowed * `2` - Web and mobile access allowed  Please use `isLocked` instead.  [Deprecated since version 4.7.0]")
    public Integer getLockStatus() {
        return lockStatus;
    }

    public void setLockStatus(Integer lockStatus) {
        this.lockStatus = lockStatus;
    }

  public UserAccount needsToChangeUserName(Boolean needsToChangeUserName) {
    this.needsToChangeUserName = needsToChangeUserName;
      return this;
  }

    /**
     * If &#x60;true&#x60;, the user must change the &#x60;userName&#x60; at the first login. (default: &#x60;false&#x60;)
   * @return needsToChangeUserName
     **/
    @ApiModelProperty(example = "false", value = "If `true`, the user must change the `userName` at the first login. (default: `false`)")
    public Boolean isNeedsToChangeUserName() {
    return needsToChangeUserName;
  }

  public void setNeedsToChangeUserName(Boolean needsToChangeUserName) {
    this.needsToChangeUserName = needsToChangeUserName;
  }

  public UserAccount needsToAcceptEULA(Boolean needsToAcceptEULA) {
    this.needsToAcceptEULA = needsToAcceptEULA;
    return this;
  }

   /**
   * User has accepted EULA. Present, if EULA is system global active. cf. &#x60;GET config/settings&#x60; - &#x60;eula_active&#x60;
    * @return needsToAcceptEULA
    **/
   @ApiModelProperty(example = "false", value = "User has accepted EULA. Present, if EULA is system global active. cf. `GET config/settings` - `eula_active`")
   public Boolean isNeedsToAcceptEULA() {
    return needsToAcceptEULA;
  }

  public void setNeedsToAcceptEULA(Boolean needsToAcceptEULA) {
    this.needsToAcceptEULA = needsToAcceptEULA;
  }

  public UserAccount title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Job title
   * @return title
  **/
  @ApiModelProperty(value = "Job title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public UserAccount gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Gender
   * @return gender
  **/
  @ApiModelProperty(example = "n", value = "Gender")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public UserAccount expireAt(DateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

   /**
   * Expiration date
   * @return expireAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Expiration date")
  public DateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(DateTime expireAt) {
    this.expireAt = expireAt;
  }

  public UserAccount isEncryptionEnabled(Boolean isEncryptionEnabled) {
    this.isEncryptionEnabled = isEncryptionEnabled;
      return this;
  }

    /**
     * User has generated private key. Possible if client-side encryption is active for this customer
   * @return isEncryptionEnabled
     **/
    @ApiModelProperty(example = "false", value = "User has generated private key. Possible if client-side encryption is active for this customer")
    public Boolean isIsEncryptionEnabled() {
    return isEncryptionEnabled;
  }

  public void setIsEncryptionEnabled(Boolean isEncryptionEnabled) {
    this.isEncryptionEnabled = isEncryptionEnabled;
  }

  public UserAccount lastLoginSuccessAt(DateTime lastLoginSuccessAt) {
    this.lastLoginSuccessAt = lastLoginSuccessAt;
    return this;
  }

   /**
   * Last successful logon date
   * @return lastLoginSuccessAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Last successful logon date")
  public DateTime getLastLoginSuccessAt() {
    return lastLoginSuccessAt;
  }

  public void setLastLoginSuccessAt(DateTime lastLoginSuccessAt) {
    this.lastLoginSuccessAt = lastLoginSuccessAt;
  }

  public UserAccount lastLoginFailAt(DateTime lastLoginFailAt) {
    this.lastLoginFailAt = lastLoginFailAt;
    return this;
  }

   /**
   * Last failed logon date
   * @return lastLoginFailAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Last failed logon date")
  public DateTime getLastLoginFailAt() {
    return lastLoginFailAt;
  }

  public void setLastLoginFailAt(DateTime lastLoginFailAt) {
    this.lastLoginFailAt = lastLoginFailAt;
  }

  public UserAccount userGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public UserAccount addUserGroupsItem(UserGroup userGroupsItem) {
      if(this.userGroups == null) {
          this.userGroups = new ArrayList<>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

   /**
   * All groups the user is member of
   * @return userGroups
  **/
  @ApiModelProperty(value = "All groups the user is member of")
  public List<UserGroup> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
  }

  public UserAccount userAttributes(UserAttributes userAttributes) {
    this.userAttributes = userAttributes;
    return this;
  }

   /**
   * User attributes
   * @return userAttributes
  **/
  @ApiModelProperty(value = "User attributes")
  public UserAttributes getUserAttributes() {
    return userAttributes;
  }

  public void setUserAttributes(UserAttributes userAttributes) {
    this.userAttributes = userAttributes;
  }

  public UserAccount email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email (not used)
   * @return email
  **/
  @ApiModelProperty(example = "john.doe@email.com", value = "Email (not used)")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserAccount phone(String phone) {
      this.phone = phone;
      return this;
  }

    /**
     * Phone Number
     *
     * @return phone
     **/
    @ApiModelProperty(value = "Phone Number")
  public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public UserAccount homeRoomId(Long homeRoomId) {
        this.homeRoomId = homeRoomId;
        return this;
    }

    /**
     * Homeroom ID
     *
     * @return homeRoomId
     **/
    @ApiModelProperty(value = "Homeroom ID")
    public Long getHomeRoomId() {
        return homeRoomId;
    }

    public void setHomeRoomId(Long homeRoomId) {
        this.homeRoomId = homeRoomId;
    }

    public UserAccount lastLoginSuccessIp(String lastLoginSuccessIp) {
        this.lastLoginSuccessIp = lastLoginSuccessIp;
        return this;
    }

    /**
     * Last successful logon IP address  [Deprecated since version 4.6.0]
     *
     * @return lastLoginSuccessIp
     **/
    @ApiModelProperty(value = "Last successful logon IP address  [Deprecated since version 4.6.0]")
    public String getLastLoginSuccessIp() {
        return lastLoginSuccessIp;
    }

    public void setLastLoginSuccessIp(String lastLoginSuccessIp) {
        this.lastLoginSuccessIp = lastLoginSuccessIp;
  }

  public UserAccount lastLoginFailIp(String lastLoginFailIp) {
      this.lastLoginFailIp = lastLoginFailIp;
      return this;
  }

    /**
     * Last failed logon IP address  [Deprecated since version 4.6.0]
     *
     * @return lastLoginFailIp
     **/
    @ApiModelProperty(value = "Last failed logon IP address  [Deprecated since version 4.6.0]")
  public String getLastLoginFailIp() {
    return lastLoginFailIp;
  }

  public void setLastLoginFailIp(String lastLoginFailIp) {
    this.lastLoginFailIp = lastLoginFailIp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAccount userAccount = (UserAccount) o;
    return Objects.equals(this.id, userAccount.id) &&
        Objects.equals(this.login, userAccount.login) &&
        Objects.equals(this.needsToChangePassword, userAccount.needsToChangePassword) &&
        Objects.equals(this.firstName, userAccount.firstName) &&
        Objects.equals(this.lastName, userAccount.lastName) &&
        Objects.equals(this.isLocked, userAccount.isLocked) &&
        Objects.equals(this.hasManageableRooms, userAccount.hasManageableRooms) &&
        Objects.equals(this.userRoles, userAccount.userRoles) &&
        Objects.equals(this.authMethods, userAccount.authMethods) &&
        Objects.equals(this.customer, userAccount.customer) &&
        Objects.equals(this.lockStatus, userAccount.lockStatus) &&
        Objects.equals(this.needsToChangeUserName, userAccount.needsToChangeUserName) &&
        Objects.equals(this.needsToAcceptEULA, userAccount.needsToAcceptEULA) &&
        Objects.equals(this.title, userAccount.title) &&
        Objects.equals(this.gender, userAccount.gender) &&
        Objects.equals(this.expireAt, userAccount.expireAt) &&
        Objects.equals(this.isEncryptionEnabled, userAccount.isEncryptionEnabled) &&
        Objects.equals(this.lastLoginSuccessAt, userAccount.lastLoginSuccessAt) &&
        Objects.equals(this.lastLoginFailAt, userAccount.lastLoginFailAt) &&
        Objects.equals(this.userGroups, userAccount.userGroups) &&
        Objects.equals(this.userAttributes, userAccount.userAttributes) &&
        Objects.equals(this.email, userAccount.email) &&
        Objects.equals(this.phone, userAccount.phone) &&
        Objects.equals(this.homeRoomId, userAccount.homeRoomId) &&
        Objects.equals(this.lastLoginSuccessIp, userAccount.lastLoginSuccessIp) &&
        Objects.equals(this.lastLoginFailIp, userAccount.lastLoginFailIp);
  }

    @Override
    public int hashCode() {
        return Objects.hash(id, login, needsToChangePassword, firstName, lastName, isLocked, hasManageableRooms, userRoles, authMethods, customer, lockStatus, needsToChangeUserName, needsToAcceptEULA, title, gender, expireAt, isEncryptionEnabled, lastLoginSuccessAt, lastLoginFailAt, userGroups, userAttributes, email, phone, homeRoomId, lastLoginSuccessIp, lastLoginFailIp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAccount {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    needsToChangePassword: ").append(toIndentedString(needsToChangePassword)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    hasManageableRooms: ").append(toIndentedString(hasManageableRooms)).append("\n");
    sb.append("    userRoles: ").append(toIndentedString(userRoles)).append("\n");
      sb.append("    authMethods: ").append(toIndentedString(authMethods)).append("\n");
      sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
      sb.append("    lockStatus: ").append(toIndentedString(lockStatus)).append("\n");
    sb.append("    needsToChangeUserName: ").append(toIndentedString(needsToChangeUserName)).append("\n");
    sb.append("    needsToAcceptEULA: ").append(toIndentedString(needsToAcceptEULA)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    isEncryptionEnabled: ").append(toIndentedString(isEncryptionEnabled)).append("\n");
    sb.append("    lastLoginSuccessAt: ").append(toIndentedString(lastLoginSuccessAt)).append("\n");
    sb.append("    lastLoginFailAt: ").append(toIndentedString(lastLoginFailAt)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    userAttributes: ").append(toIndentedString(userAttributes)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
      sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
      sb.append("    homeRoomId: ").append(toIndentedString(homeRoomId)).append("\n");
      sb.append("    lastLoginSuccessIp: ").append(toIndentedString(lastLoginSuccessIp)).append("\n");
    sb.append("    lastLoginFailIp: ").append(toIndentedString(lastLoginFailIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

