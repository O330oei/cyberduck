/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.20.1  - built at: 2020-04-05 23:00:17<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.20.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.sds.io.swagger.client.model.GroupInfo;
import ch.cyberduck.core.sds.io.swagger.client.model.PendingGroupData;
import ch.cyberduck.core.sds.io.swagger.client.model.PendingUserData;
import ch.cyberduck.core.sds.io.swagger.client.model.UserInfo;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Pending assignment information
 */
@ApiModel(description = "Pending assignment information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T17:57:49.759+02:00")
public class PendingAssignmentData {
  @JsonProperty("roomId")
  private Long roomId = null;

  /**
   * Acceptance state: * &#x60;ACCEPTED&#x60; * &#x60;WAITING&#x60; * &#x60;DENIED&#x60;
   */
  public enum StateEnum {
    ACCEPTED("ACCEPTED"),
    
    WAITING("WAITING"),
    
    DENIED("DENIED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("userInfo")
  private UserInfo userInfo = null;

  @JsonProperty("groupInfo")
  private GroupInfo groupInfo = null;

  @JsonProperty("pendingUserData")
  private PendingUserData pendingUserData = null;

  @JsonProperty("pendingGroupData")
  private PendingGroupData pendingGroupData = null;

  @JsonProperty("userId")
  private Long userId = null;

  @JsonProperty("groupId")
  private Long groupId = null;

  public PendingAssignmentData roomId(Long roomId) {
    this.roomId = roomId;
    return this;
  }

   /**
   * Room ID
   * @return roomId
  **/
  @ApiModelProperty(required = true, value = "Room ID")
  public Long getRoomId() {
    return roomId;
  }

  public void setRoomId(Long roomId) {
    this.roomId = roomId;
  }

  public PendingAssignmentData state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Acceptance state: * &#x60;ACCEPTED&#x60; * &#x60;WAITING&#x60; * &#x60;DENIED&#x60;
   * @return state
  **/
  @ApiModelProperty(example = "ACCEPTED", required = true, value = "Acceptance state: * `ACCEPTED` * `WAITING` * `DENIED`")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public PendingAssignmentData userInfo(UserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

   /**
   * Information about pending users  [Since version 4.11.0]
   * @return userInfo
  **/
  @ApiModelProperty(required = true, value = "Information about pending users  [Since version 4.11.0]")
  public UserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(UserInfo userInfo) {
    this.userInfo = userInfo;
  }

  public PendingAssignmentData groupInfo(GroupInfo groupInfo) {
    this.groupInfo = groupInfo;
    return this;
  }

   /**
   * Information about group with pending assignment option  [Since version 4.11.0]
   * @return groupInfo
  **/
  @ApiModelProperty(required = true, value = "Information about group with pending assignment option  [Since version 4.11.0]")
  public GroupInfo getGroupInfo() {
    return groupInfo;
  }

  public void setGroupInfo(GroupInfo groupInfo) {
    this.groupInfo = groupInfo;
  }

  public PendingAssignmentData pendingUserData(PendingUserData pendingUserData) {
    this.pendingUserData = pendingUserData;
    return this;
  }

   /**
   * &#x60;DEPRECATED&#x60;: Information about pending users use &#x60;userInfo&#x60; instead  [Deprecated since version 4.11.0]
   * @return pendingUserData
  **/
  @ApiModelProperty(required = true, value = "`DEPRECATED`: Information about pending users use `userInfo` instead  [Deprecated since version 4.11.0]")
  public PendingUserData getPendingUserData() {
    return pendingUserData;
  }

  public void setPendingUserData(PendingUserData pendingUserData) {
    this.pendingUserData = pendingUserData;
  }

  public PendingAssignmentData pendingGroupData(PendingGroupData pendingGroupData) {
    this.pendingGroupData = pendingGroupData;
    return this;
  }

   /**
   * &#x60;DEPRECATED&#x60;: Information about group with pending assignment option use &#x60;groupInfo&#x60; instead  [Deprecated since version 4.11.0]
   * @return pendingGroupData
  **/
  @ApiModelProperty(required = true, value = "`DEPRECATED`: Information about group with pending assignment option use `groupInfo` instead  [Deprecated since version 4.11.0]")
  public PendingGroupData getPendingGroupData() {
    return pendingGroupData;
  }

  public void setPendingGroupData(PendingGroupData pendingGroupData) {
    this.pendingGroupData = pendingGroupData;
  }

  public PendingAssignmentData userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * &#x60;DEPRECATED&#x60;: Unique identifier for the user use &#x60;id&#x60; from &#x60;UserInfo&#x60; instead  [Deprecated since version 4.2.0]
   * @return userId
  **/
  @ApiModelProperty(value = "`DEPRECATED`: Unique identifier for the user use `id` from `UserInfo` instead  [Deprecated since version 4.2.0]")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public PendingAssignmentData groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * &#x60;DEPRECATED&#x60;: Unique identifier for the group use &#x60;id&#x60; from &#x60;GroupInfo&#x60; instead  [Deprecated since version 4.2.0]
   * @return groupId
  **/
  @ApiModelProperty(value = "`DEPRECATED`: Unique identifier for the group use `id` from `GroupInfo` instead  [Deprecated since version 4.2.0]")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingAssignmentData pendingAssignmentData = (PendingAssignmentData) o;
    return Objects.equals(this.roomId, pendingAssignmentData.roomId) &&
        Objects.equals(this.state, pendingAssignmentData.state) &&
        Objects.equals(this.userInfo, pendingAssignmentData.userInfo) &&
        Objects.equals(this.groupInfo, pendingAssignmentData.groupInfo) &&
        Objects.equals(this.pendingUserData, pendingAssignmentData.pendingUserData) &&
        Objects.equals(this.pendingGroupData, pendingAssignmentData.pendingGroupData) &&
        Objects.equals(this.userId, pendingAssignmentData.userId) &&
        Objects.equals(this.groupId, pendingAssignmentData.groupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roomId, state, userInfo, groupInfo, pendingUserData, pendingGroupData, userId, groupId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingAssignmentData {\n");
    
    sb.append("    roomId: ").append(toIndentedString(roomId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    groupInfo: ").append(toIndentedString(groupInfo)).append("\n");
    sb.append("    pendingUserData: ").append(toIndentedString(pendingUserData)).append("\n");
    sb.append("    pendingGroupData: ").append(toIndentedString(pendingGroupData)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

