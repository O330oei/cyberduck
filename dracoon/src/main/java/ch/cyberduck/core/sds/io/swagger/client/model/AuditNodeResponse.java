/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * AuditNodeResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class AuditNodeResponse {
  @JsonProperty("nodeId")
  private Long nodeId = null;

  @JsonProperty("nodeName")
  private String nodeName = null;

  @JsonProperty("nodeParentPath")
  private String nodeParentPath = null;

  @JsonProperty("nodeCntChildren")
  private Integer nodeCntChildren = null;

  @JsonProperty("auditUserPermissionList")
  private List<AuditUserPermission> auditUserPermissionList = new ArrayList<>();

  @JsonProperty("nodeParentId")
  private Long nodeParentId = null;

  @JsonProperty("nodeSize")
  private Long nodeSize = null;

  @JsonProperty("nodeRecycleBinRetentionPeriod")
  private Integer nodeRecycleBinRetentionPeriod = null;

  @JsonProperty("nodeQuota")
  private Long nodeQuota = null;

  @JsonProperty("nodeIsEncrypted")
  private Boolean nodeIsEncrypted = null;

  @JsonProperty("nodeHasActivitiesLog")
  private Boolean nodeHasActivitiesLog = null;

  @JsonProperty("nodeCreatedAt")
  private DateTime nodeCreatedAt = null;

  @JsonProperty("nodeCreatedBy")
  private UserInfo nodeCreatedBy = null;

  @JsonProperty("nodeUpdatedAt")
  private DateTime nodeUpdatedAt = null;

  @JsonProperty("nodeUpdatedBy")
  private UserInfo nodeUpdatedBy = null;

    @JsonProperty("nodeHasRecycleBin")
    private Boolean nodeHasRecycleBin = null;

  public AuditNodeResponse nodeId(Long nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Node ID
   * @return nodeId
  **/
  @ApiModelProperty(required = true, value = "Node ID")
  public Long getNodeId() {
    return nodeId;
  }

  public void setNodeId(Long nodeId) {
    this.nodeId = nodeId;
  }

  public AuditNodeResponse nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Node name
   * @return nodeName
  **/
  @ApiModelProperty(required = true, value = "Node name")
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }

  public AuditNodeResponse nodeParentPath(String nodeParentPath) {
    this.nodeParentPath = nodeParentPath;
    return this;
  }

   /**
   * Parent node path &#x60;/&#x60; if node is a root node (room)
   * @return nodeParentPath
  **/
  @ApiModelProperty(required = true, value = "Parent node path `/` if node is a root node (room)")
  public String getNodeParentPath() {
    return nodeParentPath;
  }

  public void setNodeParentPath(String nodeParentPath) {
    this.nodeParentPath = nodeParentPath;
  }

  public AuditNodeResponse nodeCntChildren(Integer nodeCntChildren) {
    this.nodeCntChildren = nodeCntChildren;
    return this;
  }

   /**
   * Number of direct children (no recursion; for rooms / folders only)
   * @return nodeCntChildren
  **/
  @ApiModelProperty(required = true, value = "Number of direct children (no recursion; for rooms / folders only)")
  public Integer getNodeCntChildren() {
    return nodeCntChildren;
  }

  public void setNodeCntChildren(Integer nodeCntChildren) {
    this.nodeCntChildren = nodeCntChildren;
  }

  public AuditNodeResponse auditUserPermissionList(List<AuditUserPermission> auditUserPermissionList) {
    this.auditUserPermissionList = auditUserPermissionList;
    return this;
  }

  public AuditNodeResponse addAuditUserPermissionListItem(AuditUserPermission auditUserPermissionListItem) {
    this.auditUserPermissionList.add(auditUserPermissionListItem);
    return this;
  }

   /**
   * List of assigned users with permissions
   * @return auditUserPermissionList
  **/
  @ApiModelProperty(required = true, value = "List of assigned users with permissions")
  public List<AuditUserPermission> getAuditUserPermissionList() {
    return auditUserPermissionList;
  }

  public void setAuditUserPermissionList(List<AuditUserPermission> auditUserPermissionList) {
    this.auditUserPermissionList = auditUserPermissionList;
  }

  public AuditNodeResponse nodeParentId(Long nodeParentId) {
    this.nodeParentId = nodeParentId;
    return this;
  }

   /**
   * Parent node ID (room or folder)
   * @return nodeParentId
  **/
  @ApiModelProperty(value = "Parent node ID (room or folder)")
  public Long getNodeParentId() {
    return nodeParentId;
  }

  public void setNodeParentId(Long nodeParentId) {
    this.nodeParentId = nodeParentId;
  }

  public AuditNodeResponse nodeSize(Long nodeSize) {
    this.nodeSize = nodeSize;
    return this;
  }

   /**
   * Node size in byte
   * @return nodeSize
  **/
  @ApiModelProperty(value = "Node size in byte")
  public Long getNodeSize() {
    return nodeSize;
  }

  public void setNodeSize(Long nodeSize) {
    this.nodeSize = nodeSize;
  }

  public AuditNodeResponse nodeRecycleBinRetentionPeriod(Integer nodeRecycleBinRetentionPeriod) {
    this.nodeRecycleBinRetentionPeriod = nodeRecycleBinRetentionPeriod;
    return this;
  }

   /**
   * Retention period for deleted nodes in days (Integer between 0 and 9999)
   * @return nodeRecycleBinRetentionPeriod
  **/
  @ApiModelProperty(value = "Retention period for deleted nodes in days (Integer between 0 and 9999)")
  public Integer getNodeRecycleBinRetentionPeriod() {
    return nodeRecycleBinRetentionPeriod;
  }

  public void setNodeRecycleBinRetentionPeriod(Integer nodeRecycleBinRetentionPeriod) {
    this.nodeRecycleBinRetentionPeriod = nodeRecycleBinRetentionPeriod;
  }

  public AuditNodeResponse nodeQuota(Long nodeQuota) {
    this.nodeQuota = nodeQuota;
    return this;
  }

   /**
   * Quota in byte
   * @return nodeQuota
  **/
  @ApiModelProperty(value = "Quota in byte")
  public Long getNodeQuota() {
    return nodeQuota;
  }

  public void setNodeQuota(Long nodeQuota) {
    this.nodeQuota = nodeQuota;
  }

  public AuditNodeResponse nodeIsEncrypted(Boolean nodeIsEncrypted) {
    this.nodeIsEncrypted = nodeIsEncrypted;
    return this;
  }

   /**
   * Encryption state
   * @return nodeIsEncrypted
  **/
   @ApiModelProperty(example = "false", value = "Encryption state")
   public Boolean isNodeIsEncrypted() {
    return nodeIsEncrypted;
  }

  public void setNodeIsEncrypted(Boolean nodeIsEncrypted) {
    this.nodeIsEncrypted = nodeIsEncrypted;
  }

  public AuditNodeResponse nodeHasActivitiesLog(Boolean nodeHasActivitiesLog) {
    this.nodeHasActivitiesLog = nodeHasActivitiesLog;
    return this;
  }

   /**
    * Is activities log active (for rooms only) (default: &#x60;true&#x60;)
   * @return nodeHasActivitiesLog
  **/
   @ApiModelProperty(example = "true", value = "Is activities log active (for rooms only) (default: `true`)")
   public Boolean isNodeHasActivitiesLog() {
    return nodeHasActivitiesLog;
  }

  public void setNodeHasActivitiesLog(Boolean nodeHasActivitiesLog) {
    this.nodeHasActivitiesLog = nodeHasActivitiesLog;
  }

  public AuditNodeResponse nodeCreatedAt(DateTime nodeCreatedAt) {
    this.nodeCreatedAt = nodeCreatedAt;
    return this;
  }

   /**
   * Creation date
   * @return nodeCreatedAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Creation date")
  public DateTime getNodeCreatedAt() {
    return nodeCreatedAt;
  }

  public void setNodeCreatedAt(DateTime nodeCreatedAt) {
    this.nodeCreatedAt = nodeCreatedAt;
  }

  public AuditNodeResponse nodeCreatedBy(UserInfo nodeCreatedBy) {
    this.nodeCreatedBy = nodeCreatedBy;
    return this;
  }

   /**
    * Created by user
   * @return nodeCreatedBy
  **/
   @ApiModelProperty(value = "Created by user")
  public UserInfo getNodeCreatedBy() {
    return nodeCreatedBy;
  }

  public void setNodeCreatedBy(UserInfo nodeCreatedBy) {
    this.nodeCreatedBy = nodeCreatedBy;
  }

  public AuditNodeResponse nodeUpdatedAt(DateTime nodeUpdatedAt) {
    this.nodeUpdatedAt = nodeUpdatedAt;
    return this;
  }

   /**
   * Modification date
   * @return nodeUpdatedAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Modification date")
  public DateTime getNodeUpdatedAt() {
    return nodeUpdatedAt;
  }

  public void setNodeUpdatedAt(DateTime nodeUpdatedAt) {
    this.nodeUpdatedAt = nodeUpdatedAt;
  }

  public AuditNodeResponse nodeUpdatedBy(UserInfo nodeUpdatedBy) {
    this.nodeUpdatedBy = nodeUpdatedBy;
    return this;
  }

   /**
    * Modified by user
   * @return nodeUpdatedBy
  **/
   @ApiModelProperty(value = "Modified by user")
  public UserInfo getNodeUpdatedBy() {
    return nodeUpdatedBy;
  }

  public void setNodeUpdatedBy(UserInfo nodeUpdatedBy) {
    this.nodeUpdatedBy = nodeUpdatedBy;
  }

    public AuditNodeResponse nodeHasRecycleBin(Boolean nodeHasRecycleBin) {
        this.nodeHasRecycleBin = nodeHasRecycleBin;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: Is Recycle Bin active (for rooms only) Recycle Bin is always on (disabling is not possible).  [Deprecated since version 4.10.0]
     *
     * @return nodeHasRecycleBin
     **/
    @ApiModelProperty(example = "true", value = "`DEPRECATED`: Is Recycle Bin active (for rooms only) Recycle Bin is always on (disabling is not possible).  [Deprecated since version 4.10.0]")
    public Boolean isNodeHasRecycleBin() {
        return nodeHasRecycleBin;
    }

    public void setNodeHasRecycleBin(Boolean nodeHasRecycleBin) {
        this.nodeHasRecycleBin = nodeHasRecycleBin;
    }


    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditNodeResponse auditNodeResponse = (AuditNodeResponse) o;
    return Objects.equals(this.nodeId, auditNodeResponse.nodeId) &&
        Objects.equals(this.nodeName, auditNodeResponse.nodeName) &&
        Objects.equals(this.nodeParentPath, auditNodeResponse.nodeParentPath) &&
        Objects.equals(this.nodeCntChildren, auditNodeResponse.nodeCntChildren) &&
        Objects.equals(this.auditUserPermissionList, auditNodeResponse.auditUserPermissionList) &&
        Objects.equals(this.nodeParentId, auditNodeResponse.nodeParentId) &&
        Objects.equals(this.nodeSize, auditNodeResponse.nodeSize) &&
        Objects.equals(this.nodeRecycleBinRetentionPeriod, auditNodeResponse.nodeRecycleBinRetentionPeriod) &&
        Objects.equals(this.nodeQuota, auditNodeResponse.nodeQuota) &&
        Objects.equals(this.nodeIsEncrypted, auditNodeResponse.nodeIsEncrypted) &&
        Objects.equals(this.nodeHasActivitiesLog, auditNodeResponse.nodeHasActivitiesLog) &&
        Objects.equals(this.nodeCreatedAt, auditNodeResponse.nodeCreatedAt) &&
        Objects.equals(this.nodeCreatedBy, auditNodeResponse.nodeCreatedBy) &&
        Objects.equals(this.nodeUpdatedAt, auditNodeResponse.nodeUpdatedAt) &&
        Objects.equals(this.nodeUpdatedBy, auditNodeResponse.nodeUpdatedBy) &&
        Objects.equals(this.nodeHasRecycleBin, auditNodeResponse.nodeHasRecycleBin);
  }

  @Override
  public int hashCode() {
      return Objects.hash(nodeId, nodeName, nodeParentPath, nodeCntChildren, auditUserPermissionList, nodeParentId, nodeSize, nodeRecycleBinRetentionPeriod, nodeQuota, nodeIsEncrypted, nodeHasActivitiesLog, nodeCreatedAt, nodeCreatedBy, nodeUpdatedAt, nodeUpdatedBy, nodeHasRecycleBin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditNodeResponse {\n");
    
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    nodeParentPath: ").append(toIndentedString(nodeParentPath)).append("\n");
    sb.append("    nodeCntChildren: ").append(toIndentedString(nodeCntChildren)).append("\n");
    sb.append("    auditUserPermissionList: ").append(toIndentedString(auditUserPermissionList)).append("\n");
    sb.append("    nodeParentId: ").append(toIndentedString(nodeParentId)).append("\n");
    sb.append("    nodeSize: ").append(toIndentedString(nodeSize)).append("\n");
    sb.append("    nodeRecycleBinRetentionPeriod: ").append(toIndentedString(nodeRecycleBinRetentionPeriod)).append("\n");
    sb.append("    nodeQuota: ").append(toIndentedString(nodeQuota)).append("\n");
    sb.append("    nodeIsEncrypted: ").append(toIndentedString(nodeIsEncrypted)).append("\n");
    sb.append("    nodeHasActivitiesLog: ").append(toIndentedString(nodeHasActivitiesLog)).append("\n");
    sb.append("    nodeCreatedAt: ").append(toIndentedString(nodeCreatedAt)).append("\n");
    sb.append("    nodeCreatedBy: ").append(toIndentedString(nodeCreatedBy)).append("\n");
    sb.append("    nodeUpdatedAt: ").append(toIndentedString(nodeUpdatedAt)).append("\n");
    sb.append("    nodeUpdatedBy: ").append(toIndentedString(nodeUpdatedBy)).append("\n");
      sb.append("    nodeHasRecycleBin: ").append(toIndentedString(nodeHasRecycleBin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

