/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

/**
 * CopyNodesRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class CopyNodesRequest {
  @JsonProperty("items")
  private List<CopyNode> items = null;

  /**
   * Node conflict resolution strategy: * &#x60;autorename&#x60; * &#x60;overwrite&#x60; * &#x60;fail&#x60;  (default: &#x60;autorename&#x60;)
   */
  public enum ResolutionStrategyEnum {
    AUTORENAME("autorename"),
    
    OVERWRITE("overwrite"),
    
    FAIL("fail");

    private String value;

    ResolutionStrategyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResolutionStrategyEnum fromValue(String text) {
      for (ResolutionStrategyEnum b : ResolutionStrategyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("resolutionStrategy")
  private ResolutionStrategyEnum resolutionStrategy = null;

  @JsonProperty("keepShareLinks")
  private Boolean keepShareLinks = null;

  @JsonProperty("nodeIds")
  private List<Long> nodeIds = null;

  public CopyNodesRequest items(List<CopyNode> items) {
    this.items = items;
    return this;
  }

  public CopyNodesRequest addItemsItem(CopyNode itemsItem) {
    if (this.items == null) {
        this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * List of nodes to be copied
   * @return items
  **/
  @ApiModelProperty(value = "List of nodes to be copied")
  public List<CopyNode> getItems() {
    return items;
  }

  public void setItems(List<CopyNode> items) {
    this.items = items;
  }

  public CopyNodesRequest resolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
    this.resolutionStrategy = resolutionStrategy;
    return this;
  }

   /**
   * Node conflict resolution strategy: * &#x60;autorename&#x60; * &#x60;overwrite&#x60; * &#x60;fail&#x60;  (default: &#x60;autorename&#x60;)
   * @return resolutionStrategy
  **/
  @ApiModelProperty(example = "autorename", value = "Node conflict resolution strategy: * `autorename` * `overwrite` * `fail`  (default: `autorename`)")
  public ResolutionStrategyEnum getResolutionStrategy() {
    return resolutionStrategy;
  }

  public void setResolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
    this.resolutionStrategy = resolutionStrategy;
  }

  public CopyNodesRequest keepShareLinks(Boolean keepShareLinks) {
    this.keepShareLinks = keepShareLinks;
    return this;
  }

   /**
    * Preserve Download Share Links and point them to the new node. (default: &#x60;false&#x60;)
   * @return keepShareLinks
  **/
   @ApiModelProperty(example = "false", value = "Preserve Download Share Links and point them to the new node. (default: `false`)")
   public Boolean isKeepShareLinks() {
    return keepShareLinks;
  }

  public void setKeepShareLinks(Boolean keepShareLinks) {
    this.keepShareLinks = keepShareLinks;
  }

  public CopyNodesRequest nodeIds(List<Long> nodeIds) {
    this.nodeIds = nodeIds;
    return this;
  }

  public CopyNodesRequest addNodeIdsItem(Long nodeIdsItem) {
    if (this.nodeIds == null) {
        this.nodeIds = new ArrayList<>();
    }
    this.nodeIds.add(nodeIdsItem);
    return this;
  }

   /**
    * &#x60;DEPRECATED&#x60;: Node IDs Please use &#x60;items&#x60; instead.
   * @return nodeIds
  **/
   @ApiModelProperty(value = "`DEPRECATED`: Node IDs Please use `items` instead.")
  public List<Long> getNodeIds() {
    return nodeIds;
  }

  public void setNodeIds(List<Long> nodeIds) {
    this.nodeIds = nodeIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CopyNodesRequest copyNodesRequest = (CopyNodesRequest) o;
    return Objects.equals(this.items, copyNodesRequest.items) &&
        Objects.equals(this.resolutionStrategy, copyNodesRequest.resolutionStrategy) &&
        Objects.equals(this.keepShareLinks, copyNodesRequest.keepShareLinks) &&
        Objects.equals(this.nodeIds, copyNodesRequest.nodeIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, resolutionStrategy, keepShareLinks, nodeIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CopyNodesRequest {\n");

      sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    resolutionStrategy: ").append(toIndentedString(resolutionStrategy)).append("\n");
    sb.append("    keepShareLinks: ").append(toIndentedString(keepShareLinks)).append("\n");
    sb.append("    nodeIds: ").append(toIndentedString(nodeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

