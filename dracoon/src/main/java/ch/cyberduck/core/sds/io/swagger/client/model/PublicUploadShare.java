/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * PublicUploadShare
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class PublicUploadShare {
  @JsonProperty("isProtected")
  private Boolean isProtected = null;

  @JsonProperty("createdAt")
  private DateTime createdAt = null;

  @JsonProperty("maxSlots")
  private Integer maxSlots = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("isEncrypted")
  private Boolean isEncrypted = null;

  @JsonProperty("expireAt")
  private DateTime expireAt = null;

  @JsonProperty("notes")
  private String notes = null;

  @JsonProperty("uploadedFiles")
  private List<PublicUploadedFileData> uploadedFiles = null;

  @JsonProperty("userUserPublicKeyList")
  private UserUserPublicKeyList userUserPublicKeyList = null;

  @JsonProperty("showUploadedFiles")
  private Boolean showUploadedFiles = null;

    @JsonProperty("maxSize")
    private Double maxSize = null;

  @JsonProperty("remainingSize")
  private Long remainingSize = null;

  @JsonProperty("remainingSlots")
  private Integer remainingSlots = null;

  public PublicUploadShare isProtected(Boolean isProtected) {
    this.isProtected = isProtected;
    return this;
  }

   /**
   * Is share protected by password
   * @return isProtected
  **/
   @ApiModelProperty(example = "false", required = true, value = "Is share protected by password")
   public Boolean isIsProtected() {
    return isProtected;
  }

  public void setIsProtected(Boolean isProtected) {
    this.isProtected = isProtected;
  }

  public PublicUploadShare createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Creation date
   * @return createdAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", required = true, value = "Creation date")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public PublicUploadShare maxSlots(Integer maxSlots) {
    this.maxSlots = maxSlots;
    return this;
  }

   /**
    * &#x60;DEPRECATED&#x60;: Maximal amount of files to upload  [Deprecated since version 4.2.0]
   * @return maxSlots
  **/
   @ApiModelProperty(required = true, value = "`DEPRECATED`: Maximal amount of files to upload  [Deprecated since version 4.2.0]")
  public Integer getMaxSlots() {
    return maxSlots;
  }

  public void setMaxSlots(Integer maxSlots) {
    this.maxSlots = maxSlots;
  }

  public PublicUploadShare name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Share display name (alias name)
   * @return name
  **/
  @ApiModelProperty(value = "Share display name (alias name)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PublicUploadShare isEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
    return this;
  }

   /**
   * Encryption state
   * @return isEncrypted
  **/
   @ApiModelProperty(example = "false", value = "Encryption state")
   public Boolean isIsEncrypted() {
    return isEncrypted;
  }

  public void setIsEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
  }

  public PublicUploadShare expireAt(DateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

   /**
   * Expiration date
   * @return expireAt
  **/
  @ApiModelProperty(example = "2018-01-01T00:00:00", value = "Expiration date")
  public DateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(DateTime expireAt) {
    this.expireAt = expireAt;
  }

  public PublicUploadShare notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * User notes (limited to 255 characters)
   * @return notes
  **/
  @ApiModelProperty(value = "User notes (limited to 255 characters)")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public PublicUploadShare uploadedFiles(List<PublicUploadedFileData> uploadedFiles) {
    this.uploadedFiles = uploadedFiles;
    return this;
  }

  public PublicUploadShare addUploadedFilesItem(PublicUploadedFileData uploadedFilesItem) {
    if (this.uploadedFiles == null) {
        this.uploadedFiles = new ArrayList<>();
    }
    this.uploadedFiles.add(uploadedFilesItem);
    return this;
  }

   /**
   * List of (public) uploaded files
   * @return uploadedFiles
  **/
  @ApiModelProperty(value = "List of (public) uploaded files")
  public List<PublicUploadedFileData> getUploadedFiles() {
    return uploadedFiles;
  }

  public void setUploadedFiles(List<PublicUploadedFileData> uploadedFiles) {
    this.uploadedFiles = uploadedFiles;
  }

  public PublicUploadShare userUserPublicKeyList(UserUserPublicKeyList userUserPublicKeyList) {
    this.userUserPublicKeyList = userUserPublicKeyList;
    return this;
  }

   /**
   * List of user public keys
   * @return userUserPublicKeyList
  **/
  @ApiModelProperty(value = "List of user public keys")
  public UserUserPublicKeyList getUserUserPublicKeyList() {
    return userUserPublicKeyList;
  }

  public void setUserUserPublicKeyList(UserUserPublicKeyList userUserPublicKeyList) {
    this.userUserPublicKeyList = userUserPublicKeyList;
  }

  public PublicUploadShare showUploadedFiles(Boolean showUploadedFiles) {
    this.showUploadedFiles = showUploadedFiles;
    return this;
  }

   /**
    * Allow display of already uploaded files (default: &#x60;false&#x60;)
   * @return showUploadedFiles
  **/
   @ApiModelProperty(example = "false", value = "Allow display of already uploaded files (default: `false`)")
   public Boolean isShowUploadedFiles() {
    return showUploadedFiles;
  }

  public void setShowUploadedFiles(Boolean showUploadedFiles) {
    this.showUploadedFiles = showUploadedFiles;
  }

    public PublicUploadShare maxSize(Double maxSize) {
        this.maxSize = maxSize;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: Maximal total size of uploaded files (in bytes)  [Deprecated since version 4.2.0]
     *
     * @return maxSize
     **/
    @ApiModelProperty(value = "`DEPRECATED`: Maximal total size of uploaded files (in bytes)  [Deprecated since version 4.2.0]")
    public Double getMaxSize() {
        return maxSize;
    }

    public void setMaxSize(Double maxSize) {
        this.maxSize = maxSize;
    }

  public PublicUploadShare remainingSize(Long remainingSize) {
    this.remainingSize = remainingSize;
    return this;
  }

   /**
   * Remaining Size
   * @return remainingSize
  **/
  @ApiModelProperty(value = "Remaining Size")
  public Long getRemainingSize() {
    return remainingSize;
  }

  public void setRemainingSize(Long remainingSize) {
    this.remainingSize = remainingSize;
  }

  public PublicUploadShare remainingSlots(Integer remainingSlots) {
    this.remainingSlots = remainingSlots;
    return this;
  }

   /**
   * Remaining Slots
   * @return remainingSlots
  **/
  @ApiModelProperty(value = "Remaining Slots")
  public Integer getRemainingSlots() {
    return remainingSlots;
  }

  public void setRemainingSlots(Integer remainingSlots) {
    this.remainingSlots = remainingSlots;
  }


    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicUploadShare publicUploadShare = (PublicUploadShare) o;
    return Objects.equals(this.isProtected, publicUploadShare.isProtected) &&
        Objects.equals(this.createdAt, publicUploadShare.createdAt) &&
        Objects.equals(this.maxSlots, publicUploadShare.maxSlots) &&
        Objects.equals(this.name, publicUploadShare.name) &&
        Objects.equals(this.isEncrypted, publicUploadShare.isEncrypted) &&
        Objects.equals(this.expireAt, publicUploadShare.expireAt) &&
        Objects.equals(this.notes, publicUploadShare.notes) &&
        Objects.equals(this.uploadedFiles, publicUploadShare.uploadedFiles) &&
        Objects.equals(this.userUserPublicKeyList, publicUploadShare.userUserPublicKeyList) &&
        Objects.equals(this.showUploadedFiles, publicUploadShare.showUploadedFiles) &&
        Objects.equals(this.maxSize, publicUploadShare.maxSize) &&
        Objects.equals(this.remainingSize, publicUploadShare.remainingSize) &&
        Objects.equals(this.remainingSlots, publicUploadShare.remainingSlots);
    }

    @Override
    public int hashCode() {
        return Objects.hash(isProtected, createdAt, maxSlots, name, isEncrypted, expireAt, notes, uploadedFiles, userUserPublicKeyList, showUploadedFiles, maxSize, remainingSize, remainingSlots);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
      sb.append("class PublicUploadShare {\n");
    
    sb.append("    isProtected: ").append(toIndentedString(isProtected)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    maxSlots: ").append(toIndentedString(maxSlots)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isEncrypted: ").append(toIndentedString(isEncrypted)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    uploadedFiles: ").append(toIndentedString(uploadedFiles)).append("\n");
    sb.append("    userUserPublicKeyList: ").append(toIndentedString(userUserPublicKeyList)).append("\n");
    sb.append("    showUploadedFiles: ").append(toIndentedString(showUploadedFiles)).append("\n");
      sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    remainingSize: ").append(toIndentedString(remainingSize)).append("\n");
    sb.append("    remainingSlots: ").append(toIndentedString(remainingSlots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

