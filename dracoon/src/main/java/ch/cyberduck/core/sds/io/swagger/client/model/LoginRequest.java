/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.10.7-LTS  - built at: 2019-03-19 14:24:35<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.10.7-LTS
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

/**
 * LoginRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-13T14:25:40.305+02:00")
public class LoginRequest {
  @JsonProperty("login")
  private String login = null;

  @JsonProperty("password")
  private String password = null;

  /**
   * Authentication methods: * &#x60;sql&#x60; * &#x60;active_directory&#x60; * &#x60;radius&#x60;
   */
  public enum AuthTypeEnum {
    SQL("sql"),
    
    ACTIVE_DIRECTORY("active_directory"),
    
    RADIUS("radius");

    private String value;

    AuthTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthTypeEnum fromValue(String text) {
      for (AuthTypeEnum b : AuthTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("authType")
  private AuthTypeEnum authType = null;

  @JsonProperty("token")
  private String token = null;

  @JsonProperty("state")
  private String state = null;

    @JsonProperty("language")
    private String language = null;

  public LoginRequest login(String login) {
    this.login = login;
    return this;
  }

   /**
   * User login name
   * @return login
  **/
  @ApiModelProperty(required = true, value = "User login name")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public LoginRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password
   * @return password
  **/
  @ApiModelProperty(required = true, value = "Password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public LoginRequest authType(AuthTypeEnum authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Authentication methods: * &#x60;sql&#x60; * &#x60;active_directory&#x60; * &#x60;radius&#x60;
   * @return authType
  **/
  @ApiModelProperty(example = "sql", value = "Authentication methods: * `sql` * `active_directory` * `radius`")
  public AuthTypeEnum getAuthType() {
    return authType;
  }

  public void setAuthType(AuthTypeEnum authType) {
    this.authType = authType;
  }

  public LoginRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Token
   * @return token
  **/
  @ApiModelProperty(value = "Token")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public LoginRequest state(String state) {
    this.state = state;
    return this;
  }

   /**
   * For RADIUS Access-Challenge If a &#x60;replyState&#x60; is returned, it must be included as &#x60;state&#x60; in the following request.
   * @return state
  **/
  @ApiModelProperty(value = "For RADIUS Access-Challenge If a `replyState` is returned, it must be included as `state` in the following request.")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

    public LoginRequest language(String language) {
        this.language = language;
        return this;
    }

    /**
     * &#x60;DEPRECATED&#x60;: Language ID or ISO 639-1 code
     *
     * @return language
     **/
    @ApiModelProperty(example = "de", value = "`DEPRECATED`: Language ID or ISO 639-1 code")
    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }


    @Override
    public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginRequest loginRequest = (LoginRequest) o;
    return Objects.equals(this.login, loginRequest.login) &&
        Objects.equals(this.password, loginRequest.password) &&
        Objects.equals(this.authType, loginRequest.authType) &&
        Objects.equals(this.token, loginRequest.token) &&
        Objects.equals(this.state, loginRequest.state) &&
        Objects.equals(this.language, loginRequest.language);
  }

  @Override
  public int hashCode() {
      return Objects.hash(login, password, authType, token, state, language);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginRequest {\n");
    
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
      sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

