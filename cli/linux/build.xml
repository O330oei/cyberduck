<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2002-2016 iterate GmbH. All rights reserved.
  ~ https://cyberduck.io/
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  -->
<project name="Cyberduck CLI Linux" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant">

    <import file="../../build.xml"/>

    <property name="app.name" value="duck"/>
    <property name="app.icon" value="${home}/cyberduck-application.png"/>
    <property name="rpm.spec" value="${build.bundles}/package/linux"/>
    <property name="deb.control" value="${build.bundles}/package/linux/control"/>
    <property name="deb.postinstall" value="${build.bundles}/package/linux/postinst"/>
    <property name="deb.postrm" value="${build.bundles}/package/linux/postrm"/>

    <target name="build" depends="version">
        <copy file="${setup}/rpm/duck.spec" todir="${rpm.spec}"/>
        <copy file="${setup}/deb/duck.control" tofile="${deb.control}"/>
        <copy file="${setup}/deb/duck.postinstall" tofile="${deb.postinstall}"/>
        <copy file="${setup}/deb/duck.postrm" tofile="${deb.postrm}"/>
        <replace file="${rpm.spec}/duck.spec" summary="true" encoding="UTF-8">
            <replacefilter token="${VERSION}" value="${version}"/>
            <replacefilter token="${REVISION}" value="${revision}"/>
        </replace>
        <path id="javafx.classpath">
            <!-- Includes linuxrpmbuilder for given architecture -->
            <pathelement path="${lib.ext}/ant-javafx.${sun.arch.data.model}.jar"/>
            <pathelement path="${build.bundles}"/>
        </path>
        <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
                 uri="javafx:com.sun.javafx.tools.ant">
            <classpath refid="javafx.classpath"/>
        </taskdef>
        <echo message="Create native bundles with classpath ${toString:javafx.classpath}"/>
        <fx:deploy nativeBundles="all"
                   outdir="${build.deploy}"
                   outfile="${app.name}-${version}"
                   offlineAllowed="true"
                   verbose="true">
            <fx:preferences shortcut="false" menu="false"
                            install="true"/>
            <fx:platform basedir="${java.home}">
                <fx:jvmarg value="-Djna.nounpack=true"/>
                <fx:jvmarg value="-Djna.noclasspath=true"/>
                <fx:jvmarg value="-Djava.awt.headless=true"/>
                <fx:jvmarg value="-Dsun.jnu.encoding=utf-8"/>
                <fx:jvmarg value="-Dfile.encoding=utf-8"/>
                <fx:jvmarg value="-Djava.security.egd=file:/dev/./urandom"/>
                <fx:jvmarg value="-Djava.net.useSystemProxies=true"/>
            </fx:platform>
            <fx:application
                name="duck" version="${version}.${revision}"
                mainClass="ch.cyberduck.cli.Terminal"/>
            <fx:info title="${app.name}" license="GPL" copyright="${copyright}"
                     description="${app.name}"
                     vendor="iterate GmbH">
                <fx:icon href="${app.icon}"/>
            </fx:info>
            <fx:resources>
                <fx:fileset dir="${build}" type="jar">
                    <include name="*.jar"/>
                </fx:fileset>
                <fx:fileset dir="${build}" type="data">
                    <include name="*.so"/>
                    <include name="*.dylib"/>
                    <include name="*.dll"/>
                </fx:fileset>
                <fx:fileset dir="${home}" type="icon">
                    <include name="*.ico"/>
                </fx:fileset>
                <fx:fileset type="license" file="${home}/LICENSE.txt"/>
                <fx:fileset dir="${build}" type="data">
                    <include name="profiles/*.cyberduckprofile"/>
                </fx:fileset>
                <!-- Localizations -->
                <fx:fileset dir="${home}" type="data">
                    <include name="*.lproj/*.strings"/>
                </fx:fileset>
            </fx:resources>
        </fx:deploy>
    </target>
</project>
